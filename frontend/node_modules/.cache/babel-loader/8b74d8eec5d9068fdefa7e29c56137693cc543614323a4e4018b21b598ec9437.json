{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enrique\\\\Documents\\\\GitHub\\\\soen341\\\\GoodProject\\\\CosmicCoffeeCrew-soen341projectW2024\\\\frontend\\\\src\\\\components\\\\CustormerReview\\\\CustomerReview.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./CustomerReview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerReview = () => {\n  _s();\n  const [reviews, setReviews] = useState([]); // This would be fetched from the backend\n  const [newReview, setNewReview] = useState('');\n  const [rating, setRating] = useState(0);\n  const handleReviewChange = event => {\n    setNewReview(event.target.value);\n  };\n  const submitReview = event => {\n    event.preventDefault();\n    if (!newReview || rating === 0) return; // Prevent blank reviews or reviews without ratings\n\n    //CHANGE IN HERE\n    const reviewData = {\n      username: \"Anonymous\",\n      // We need to replace this with actual data... \"real user links from the database\"\n      text: newReview,\n      stars: rating\n    };\n\n    // Here, you would send the reviewData to the backend.\n    // For now, we'll just add it to the state.\n    setReviews([...reviews, reviewData]);\n    setNewReview(''); // Reset the input field after submission\n    setRating(0); // Reset the rating after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Customer Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitReview,\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"star-rating\",\n        children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(Star, {\n          selected: index < rating,\n          onSelect: () => setRating(index + 1)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newReview,\n        onChange: handleReviewChange,\n        className: \"border-gray-400 border rounded px-4 py-2 mt-1 block w-full\",\n        placeholder: \"Write your review here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-primary text-white px-4 py-2 rounded mt-2\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previous-reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Previous Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReviewList, {\n        reviews: reviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerReview, \"cO4yvQg6MgTiG0wc9HVnadQW+no=\");\n_c = CustomerReview;\nconst Star = ({\n  selected,\n  onSelect\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: selected ? \"star selected\" : \"star\",\n  onClick: onSelect,\n  children: \"\\u2605\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 3\n}, this);\n_c2 = Star;\nStar.propTypes = {\n  selected: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired\n};\nconst ReviewList = ({\n  reviews\n}) => {\n  if (reviews.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"reviews-list\",\n    children: reviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"border-b border-gray-300 py-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-user\",\n        children: [\"Reviewed by: \", review.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-stars\",\n        children: ['★'.repeat(review.stars), '☆'.repeat(5 - review.stars)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-text\",\n        children: review.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ReviewList;\nReviewList.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    stars: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default CustomerReview;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CustomerReview\");\n$RefreshReg$(_c2, \"Star\");\n$RefreshReg$(_c3, \"ReviewList\");","map":{"version":3,"names":["useState","PropTypes","jsxDEV","_jsxDEV","CustomerReview","_s","reviews","setReviews","newReview","setNewReview","rating","setRating","handleReviewChange","event","target","value","submitReview","preventDefault","reviewData","username","text","stars","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Array","map","_","index","Star","selected","onSelect","onChange","placeholder","type","ReviewList","_c","onClick","_c2","propTypes","bool","func","isRequired","length","review","repeat","_c3","arrayOf","shape","string","number","$RefreshReg$"],"sources":["C:/Users/enrique/Documents/GitHub/soen341/GoodProject/CosmicCoffeeCrew-soen341projectW2024/frontend/src/components/CustormerReview/CustomerReview.jsx"],"sourcesContent":["import  { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./CustomerReview.css\";\r\n\r\nconst CustomerReview = () => {\r\n  const [reviews, setReviews] = useState([]); // This would be fetched from the backend\r\n  const [newReview, setNewReview] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n\r\n  const handleReviewChange = (event) => {\r\n    setNewReview(event.target.value);\r\n  };\r\n\r\n  const submitReview = (event) => {\r\n    event.preventDefault();\r\n    if (!newReview || rating === 0) return; // Prevent blank reviews or reviews without ratings\r\n\r\n    //CHANGE IN HERE\r\n    const reviewData = {\r\n      username: \"Anonymous\", // We need to replace this with actual data... \"real user links from the database\"\r\n      text: newReview,\r\n      stars: rating,\r\n    };\r\n\r\n    // Here, you would send the reviewData to the backend.\r\n    // For now, we'll just add it to the state.\r\n    setReviews([...reviews, reviewData]);\r\n    setNewReview(''); // Reset the input field after submission\r\n    setRating(0); // Reset the rating after submission\r\n  };\r\n\r\n  return (\r\n    <div className=\"review-container\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Customer Reviews</h2>\r\n      <form onSubmit={submitReview} className=\"mb-8\">\r\n        <div className=\"star-rating\">\r\n          {[...Array(5)].map((_, index) => (\r\n            <Star\r\n              key={index}\r\n              selected={index < rating}\r\n              onSelect={() => setRating(index + 1)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <textarea\r\n          value={newReview}\r\n          onChange={handleReviewChange}\r\n          className=\"border-gray-400 border rounded px-4 py-2 mt-1 block w-full\"\r\n          placeholder=\"Write your review here\"\r\n        />\r\n        <button type=\"submit\" className=\"bg-primary text-white px-4 py-2 rounded mt-2\">\r\n          Submit Review\r\n        </button>\r\n      </form>\r\n      <div className=\"previous-reviews\">\r\n        <h3>Previous Reviews</h3>\r\n        <ReviewList reviews={reviews} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Star = ({ selected, onSelect }) => (\r\n  <span className={selected ? \"star selected\" : \"star\"} onClick={onSelect}>\r\n    &#9733;\r\n  </span>\r\n);\r\n\r\nStar.propTypes = {\r\n  selected: PropTypes.bool,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ReviewList = ({ reviews }) => {\r\n  if (reviews.length === 0) {\r\n    return <p>No reviews yet.</p>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"reviews-list\">\r\n      {reviews.map((review, index) => (\r\n        <li key={index} className=\"border-b border-gray-300 py-2\">\r\n          <div className=\"review-user\">Reviewed by: {review.username}</div>\r\n          <div className=\"review-stars\">\r\n            {'★'.repeat(review.stars)}{'☆'.repeat(5 - review.stars)}\r\n          </div>\r\n          <div className=\"review-text\">{review.text}</div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nReviewList.propTypes = {\r\n  reviews: PropTypes.arrayOf(PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    stars: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nexport default CustomerReview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}